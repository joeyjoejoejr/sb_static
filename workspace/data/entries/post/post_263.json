{
  "id": "post_263",
  "Title": "The Future of Chrome Apps",
  "Summary": "Earlier this month Google released an update to it’s Chrome Web browser that enabled a new app launcher on the desktop. Available only on Windows and Chrome OS for the time being, the Chrome App launcher marks another step along Google’s path to convergence for it’s software platform, but more than that it marks a…",
  "Body": "<p id=\"attachment_3974\" style=\"width: 450px; text-align: center;\" class=\"wp-caption aligncenter\">\r\n\t<a href=\"http://sbblog.s3.amazonaws.com/wp-content/uploads/2013/09/windows-image-blogpost.png\"><img class=\"size-full wp-image-3974\" alt=\"windows-image-blogpost\" src=\"http://sbblog.s3.amazonaws.com/wp-content/uploads/2013/09/windows-image-blogpost.png\" width=\"440\" height=\"563\"></a><em>The Chrome App Launcher is Windows-only at the moment, but Mac and Linux users can expect the update sometime in the near future.</em></p><p id=\"attachment_3974\" style=\"width: 450px; text-align: center;\" class=\"wp-caption aligncenter\"></p><p>\r\n\tEarlier this month \r\n\t<a href=\"http://chrome.blogspot.com/2013/09/a-new-breed-of-chrome-apps.html\">Google released an update</a> to it’s Chrome Web browser that enabled a new app launcher on the desktop. Available only on Windows and Chrome OS for the time being, the Chrome App launcher marks another step along Google’s path to convergence for its software platform, but more than that it marks a shift in the way we think about applications.</p><p>\r\n\tChrome Apps (still just called Chrome Apps for now) are security-sandboxed applications built with HTML, CSS and Javascript that have access to some system hardware, such as the GPU and connected devices, as well as the Chrome APIs already used by their Web counterparts. Gaining access to the desktop means Chrome Apps can perform offline functionality without having to rely on Local Storage and the size limitations that come with it, or on the more fully-featured but \r\n\t<a href=\"http://alistapart.com/article/application-cache-is-a-douchebag\">significantly more complex Application Cache</a>. Utilizing the same technologies used to build Web apps today means Web developers just gained a new platform they can deploy to.</p><p>\r\n\tThe average end user doesn’t care what their app is built with as long as it loads quickly and does what it’s told. Web technologies have been mature enough to create attractive, responsive interfaces for some time now, but a browser is still needed in most cases to render the code. Chrome Apps have none of the standard Chrome browser controls, so visually they can look like anything. Even native desktop apps are typically governed to some extend by the design of the parent OS.</p><p>\r\n\tThe challenge and opportunity exists in taking advantage of this paradigm shift in app definition. The Web can’t do everything, but it’s well on it’s way. Data-centric apps are prime targets and well-suited to the Chrome platform. Every successful app that runs in the browser &mdash; think Mint, Soundcloud, Facebook, Hulu, not to mention Google Apps as a whole &mdash; are all prime examples of what is possible with the browser. Without an address bar and a back button all of these apps would be indistinguishable from something out of the Mac App Store.</p><p>\r\n\tApplications like Adobe Photoshop, FinalCut Pro, and Maya are a ways away from becoming Chrome Apps. Resource heavy, media-centric applications benefit from performance gains of native code and direct access to hardware &mdash; two things most browser apps can’t make use of&hellip; yet. As more of the barriers between Web and desktop are broken down and Web apps get better access to hardware, Web counterparts to these high-powered media apps will likely be more commonplace.</p><p>\r\n\tChrome Apps have always felt kind of like glorified browser extensions, even with a shiny marketplace and the ability to sync when you sign into Chrome. There are definitely good Chrome Apps available, but even some of those are just the app website wrapped in a container.</p><p>\r\n\tMoving to make them “first-class citizens” &mdash; something that will sound familiar to those following the development of \r\n\t<a href=\"http://developer.ubuntu.com/resources/tutorials/html5/\">Ubuntu Phone</a> &mdash; is an important step in moving the Web forward as an application platform. Even Windows now has provisions for <a href=\"http://msdn.microsoft.com/en-us/library/windows/apps/br211385.aspx\">developing with HTML and Javascript</a>, to say nothing of more web-centric operating systems like <a href=\"https://developer.mozilla.org/en-US/docs/Mozilla/Firefox_OS\">Firefox OS</a> and Amazon’s <a href=\"https://developer.amazon.com/sdk/webapps.html\">Fire platform</a>. It’s clear from current trends that the days of installing to the desktop are nearly at an end.</p><p>\r\n\tWhether Chrome Apps usher in this new era of hardware-accessing, HTML-based applications single-handedly remains to be seen, but anyone creating desktop-only software without an eye on the Web is poised to be left behind by their users.</p><p><em>Smashing Boxes is a web and mobile app development company know for creating a lasting experience through bold design and disrupting the status quo. We are entrepreneurs and craftsmen first, and a digital creative agency second. Inspired by our visionary clients, we transform ideas into innovative web and mobile applications. </em><a href=\"http://smashingboxes.com/work\">Take a look at our work.</a></p>",
  "Slug": "the-future-of-chrome-apps",
  "slug_history": "---\n- back-to-the-desktop-chrome-apps-and-the-expanding-web-platform\n",
  "visits": 731,
  "Published": "2013-09-25T04:00:00+00:00",
  "Authorname": "Biko Tushinde",
  "category_id": 1,
  "image_uid": "2014/07/28/17/16/56/911/file",
  "created_at": "2014-06-05T18:22:28+00:00",
  "updated_at": "2014-07-31T20:34:45+00:00",
  "markdown": null,
  "image_alt_text": null,
  "featured": false,
  "database_id": 263,
  "category": {
    "type": "Entry",
    "id": "category_1"
  }
}