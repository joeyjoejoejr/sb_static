{
  "id": "post_363",
  "Title": "Button Tracking Using Google Tag Manager",
  "Summary": "Tracking events provides valuable insights into user interactions with specific elements on your site. These insights can be used to evaluate user behavior, assess whether users are behaving as expected, and develop ideas for testing if the behavior is unexpected. Using the same PDF download tracking example as before, we’ll now take a deeper look into how GTM works and the setup involved in creating a tag. ",
  "Body": "",
  "Slug": "button-tracking-using-google-tag-manager",
  "slug_history": "--- []\n",
  "visits": 1556,
  "Published": "2014-12-12T05:00:00+00:00",
  "Authorname": "",
  "category_id": 1,
  "image_uid": "2014/12/11/14/53/27/802/file",
  "created_at": "2014-12-10T18:59:14+00:00",
  "updated_at": "2014-12-12T15:17:30+00:00",
  "markdown": "In my [previous post](http://smashingboxes.com/ideas/google-tag-manager-and-event-tracking), I discussed how Google Tag Manager (GTM) will save you and your developers time tracking events on your website. Tracking events provides valuable insights into user interactions with specific elements on your site. These insights can be used to evaluate user behavior, assess whether users are behaving as expected, and develop ideas for testing if the behavior is unexpected. Using the same PDF download tracking example as before, we’ll now take a deeper look into how GTM works and the setup involved in creating a tag. \r\n\r\nTo do this, we’re going to track this generic PDF button that has a link to our 2014 Widgets PDF. \r\n\r\n![GoogleTagManagerTutorial](http://i.imgur.com/OBvLlga.png)\r\n\r\nLet’s assume that you have created a GTM container and already placed it immediately after the '< body >' tag of your site. When we first open our GTM container we will see that we have no tags in it. Perfect, this means we have a clean working environment and have freedom to create new tags.\r\n\r\n![GoogleTagManagerTutorial](http://i.imgur.com/UzpTkLf.png)\r\n\r\nThe first tag that we are going to make is a **Link Listener**. This **Tag** is going to listen for any clicks that happen on the page. To create a Tag, click on the **New** button and select **Tag**.\r\n\r\n![GoogleTagManagerTutorial](http://i.imgur.com/6IGK7OD.png)\r\n\r\nFirst, we need to name our Tag and in this case we’re going to write “Example Link Listener.” Be sure to label anything you create in GTM clearly so that other users know what the Tag does or is tracking. \r\n\r\nAfter you enter a clearly defined name, click on the **Tag Type** drop down menu. It will open up a long list of Tag Types. Maneuver your mouse down to Event Listener and select the **Link Click Listener**. \r\n\r\n![GoogleTagManagerTutorial](http://i.imgur.com/ajDRQxH.png)\r\n\r\nGreat, we have just created our first tag but we are not finished quite yet. In the top right corner you will see **Firing Rules**. This is actually what causes the Tag to be fired.  \r\n\r\n![GoogleTagManagerTutorial](http://i.imgur.com/B4JE9dj.png)\r\n\r\nWe are going to add our first Rule to our Link Listener Tag. Luckily, Google has predefined the rule we will be using for our Link Listener Tag. The **All Pages Rule** means this Tag will fire on all of our web pages. Once we have saved this rule on on Link Listener we can move on to our next Tag, an Event **Tag**.\r\n\r\n![Image of Yaktocat](http://i.imgur.com/P50xHLd.png)\r\n\r\nWe want to select Create New Tag and make sure it is labeled clearly. In this example we’ve named it, “Example PDF Download.” This time we are going to hover over the **Google Analytics** tab and select **Universal Analytics**. (If you are not running Universal Analytics you need to select Classic.)\r\n\r\n![GoogleTagManagerTutorial](http://i.imgur.com/EQ9WLHX.png)\r\n\r\nOnce Universal Analytics is selected, scroll down and enter your Google Analytics Tracking Code ID. This is UA-XXXXXXX in your Google Analytics account and is what links your tag info to your events reports.  \r\n\r\n![GoogleTagManagerTutorial](http://i.imgur.com/G0TQtjw.png)\r\n\r\nNote: If you create a {{GA Tracking Code}} macro then you don’t have to enter your ID in each time you make a new event tag. Check out GTM expert Simo Ahava’s [post](http://www.simoahava.com/analytics/macro-guide-google-tag-manager/#7) to see how to do this.\r\n\r\nOnce you have typed your GA ID into the text field, scroll down till you see the **Track Type** drop down selector. It will have pageview selected as the default but we are going to edit that field. \r\n\r\n![GoogleTagManagerTutorial](http://i.imgur.com/4O5u03g.png)\r\n\r\nSelect **Event** as what we want to track. This will open up four text fields under **Event Tracking Parameters**. As I mentioned earlier, we’re going to use the same Category, Action, and Label from my earlier post. If you aren’t sure what these are or what role they play in Google Analytics, stop here and read the post on [Event Tracking](http://smashingboxes.com/ideas/google-tag-manager-and-event-tracking). \r\n\r\n![GoogleTagManagerTutorial](http://i.imgur.com/iGOlxEY.png)\r\n\r\nNow that we have typed PDF_Downloads and Download in the **Category** and **Action** fields. But in the label field there this **{{element id}}** macro. This is a macro, which will return the ID that is associated with our PDF button. In this case it will return “2014_widgets_pdf” in our Google Analytics Events Report as the Event Label. \r\n\r\nThis **Tag** is ready to go, but we have one small problem with it. We need a rule that will cause this **Tag** to fire when people click on it. To do this, we must connect our “Example Link Listener” Tag to our “Example PDF Download” Tag. The rule for our “Example PDF Download” Tag is going to be named “Example PDF Download Rule.” This will be a little trickier because Google has not predefined it for us.\r\n\r\nOkay that’s a lot, so let’s press pause for a moment. I’m going briefly to tell you about an amazing Google Chrome extension that [Simo Ahava](http://www.simoahava.com/) developed called [GTM Sonar](https://chrome.google.com/webstore/detail/gtm-sonar/iiihoahkpncaheicjfemhjkkfamcahcd). I highly suggest you download it. Once you turn it on, you’ll select what listener you are planning to use for your Tag, in our case you should select Link Listener. \r\n\r\nClick on the PDF button on your site. Open up your browser Console, type in **debugDL** and press enter. It will return an Object with all the pertinent GTM information you need for your rule that will cause your tag to fire. \r\n\r\n![GoogleTagManagerTutorial](http://i.imgur.com/RQMreUM.png)\r\n\r\nBack to our “Example PDF Download Rule.” We can now enter the information from our console to make the rule work. For the PDF Download Tag to fire the event must contain a gtm.linkClick, which it does. We want the Tag to fire if the element class contains “button” in the class. And just in case other buttons have the same class name we want the element ID to contain “PDF” in it. If any of those parameters are false, the Tag will not fire.  \r\n\r\n![GoogleTagManagerTutorial](http://i.imgur.com/rijfuBL.png)\r\n\r\nClick save and you will see your Tags in the container draft. Before you publish this draft in your container you should **Preview** and **Debug** your tags on your site to make sure your Tags are firing correctly. \r\n\r\n![GoogleTagManagerTutorial](http://i.imgur.com/zTIC3kD.png)\r\n\r\nThis is a very simple example of how to use GTM. Many times it is not as straightforward as this. For example, many developers do not like using IDs in their code, in which case you will need to find another way to get the name of the specific PDF a user downloaded in your Label field. In such instances we would use the element url or {{element url}} macro to return different labels. \r\n\r\nI hope this post has helped you with the complexities of Event Tagging and GTM. **On Google+ or LinkedIn?** Follow us [+SmashingBoxes](https://plus.google.com/+Smashingboxes/posts) and join us on [LinkedIn](https://www.linkedin.com/company/smashing-boxes) to get updates on more articles like this.",
  "image_alt_text": null,
  "featured": false,
  "database_id": 363,
  "category": {
    "type": "Entry",
    "id": "category_1"
  },
  "tags": [
    {
      "type": "tag",
      "id": "tag_32"
    }
  ]
}