{
  "id": "post_368",
  "Title": "The Rise of Single Page Applications in Web Development",
  "Summary": "Single page applications (SPAs) are applications that break away from traditional page rendering methods. They provide a snappier experience for users when compared to traditional static and server rendered pages. This article outlines the positives and negatives of single page applications for web products. ",
  "Body": "",
  "Slug": "single-page-applications-in-web-development",
  "slug_history": "--- []\n",
  "visits": 1053,
  "Published": "2014-12-19T10:00:00+00:00",
  "Authorname": "Rick Carlino",
  "category_id": 1,
  "image_uid": "2014/12/19/10/24/51/954/file",
  "created_at": "2014-12-17T21:00:27+00:00",
  "updated_at": "2014-12-19T16:48:23+00:00",
  "markdown": "##What are Single Page Applications?\r\n\r\nSingle page applications (SPAs) are applications that break away from traditional page rendering methods. They provide a snappier experience for users when compared to traditional static and server rendered pages.\r\n\r\nIn the traditional method of rendering a webpage, a backend server builds or retrieves an HTML file and sends the entire file to the browser in one action. If the user wishes to perform another action, such as going from the search bar to the search results page, the browser loads an entirely new page. This works fine and is the model that most of the Web still follows today. Single page applications promise to provide users with a richer experience than possible with this traditional model.\r\n\r\nSingle page client side applications load similarly to traditional web pages. Rather than reload new pages for every user action, however, a single page app will load data in the background and seamlessly repaint the current page, giving the user a sense of instant feedback not possible with traditional web pages. The end effect is faster response times and an experience that feels more like a native app than a web page. The user is never forced to stare at a blank screen, and some data can even be loaded preemptively, before the user performs an action.\r\n\r\n##Slow Apps Kill Your Conversion Rate\r\n\r\nSlow pages frustrate users. This leads to higher rates of page abandonment and destroys your organization’s conversion rate. [Some studies](http://www.forbes.com/sites/rogerdooley/2012/12/04/fast-sites/) have shown that even a one second waiting period will drive your conversion rate down by as much as 7%. Slow pages are not just an issue for your IT department - they can have a negative effect on your bottom line.\r\n\r\n##Are They A Good Fit?\r\n\r\nDespite benefits gained by creating SPAs, they can add a level of complexity to the development process. For certain types of websites, particularly those that perform simple information retrieval tasks, the benefits of creating a single page application may be less apparent.\r\n\r\nSome of the most common concerns that an organization will need to address when building a new single application are:\r\n\r\n- Search engine optimization and discoverability\r\n\r\n- Accessibility\r\n\r\n- Outdated browser support\r\n\r\n- Internationalization and foreign language support (i18n)\r\n\r\n- Link sharing and bookmarks\r\n\r\nAll of the concerns listed can be fixed by a knowledgeable software engineer, but they are issues that should be addressed as early as possible in the development cycle.\r\n\r\nIt may also be worth considering whether a single page application is the correct approach for the particular problem your organization wishes to solve.\r\n\r\nSome good questions to ask are:\r\n\r\n- Is the application focused on manipulation of data and user interaction, or is it simply performing retrieval of stored information?\r\n\r\n- Is the site a true 'application', or is it focused on presenting information that will rarely change eg. “brochureware”?\r\n\r\n- Will the application ever need to tie into third party services or provide an alternative means of access, such as a mobile client?\r\n\r\n##It’s More Than Just Speed\r\n\r\nThere are a number of other reasons that you may wish to consider a single page approach. Most notable is the ability to provide realtime app feedback in the browser such as real time streaming updates, infinitely scrollable search results, and offline-first web apps that can operate without an Internet connection.\r\n\r\nAside from speed and a larger range of features, SPAs offer a huge win for long-term maintainability. This is because single page applications typically follow a service-based architecture that separates data access concerns (an API) from the user interface. As an example, a web-based version of the application and a native mobile app can share the same data via an API. This turns into cost savings when services can be reused without modification. Splitting an application into services also means that changes to client application code have no effect on API or infrastructure level applications and vice versa.\r\n\r\n##Take a Look\r\n\r\nSmashing Boxes has built a variety of web and mobile applications that take advantage of many of these principles. Take a look at [some of our past work](http://smashingboxes.com/work) or our [Github](https://github.com/smashingboxes). Stay tuned for our next article which will cover a high level technical overview of the architecture of single page applications.",
  "image_alt_text": null,
  "featured": false,
  "database_id": 368,
  "category": {
    "type": "Entry",
    "id": "category_1"
  },
  "tags": [
    {
      "type": "tag",
      "id": "tag_13"
    },
    {
      "type": "tag",
      "id": "tag_15"
    },
    {
      "type": "tag",
      "id": "tag_36"
    }
  ]
}