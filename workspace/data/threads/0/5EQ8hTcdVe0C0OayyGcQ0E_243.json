{
  "id": "post_243",
  "title": "Usage Speed Factors in Interaction Design",
  "summary": "Application designs typically require users to take at least one action after choosing at least one option. Behind each option is at least one rule determining what happens once an action is triggered. Interaction rules are the most fundamental part of an interaction design, affecting everything from the level of user control, to timing and…",
  "body": "<p>\r\n\tApplication designs typically require users to take at least one action after choosing at least one option. Behind each option is at least one rule determining what happens once an action is triggered. Interaction rules are the most fundamental part of an interaction design, affecting everything from the level of user control, to timing and event order, feedback, what happens at the end of an interaction, and more (check out Dan Saffer’s&nbsp;<a href=\"http://microinteractions.com/\">Microinteractions</a> book, for more on rules and interaction structure). There are many factors affecting the usage speed of an application, we will primarily be examining interaction rules in an attempt to demonstrate how their effective design can help make applications easier and faster to use. In short, elimination of options, and their corresponding rules, leads to faster usage speed. Once the design has reached the maximum level of simplicity, there are still many ways to increase usage speed, including creative design based on user research, and elimination of usage error potential.</p><p>\r\n\tApplication rule sets can be simple or quite extensive. As an example, let’s look at some possible rules for a photo sharing application. The rule set for such an application might contain the following:</p><ol>\r\n\t<li>If the user is on a photo album page and “Edit album” is selected, display an editable album title field and a list of photographs.</li>\t<li>If at least one photo is selected, display “Delete selected” and “Move selected” buttons.</li></ol><p>\r\n\tIn the above example, the “Delete selected” and “Move selected” buttons appear only when at least one image has been selected. Irrelevant options remain hidden until the user makes them relevant. It’s in this manner that effective rule design can increase usability by limiting user options. Generally speaking, the fewer the options, the fewer the rules, and the faster the usage speed.</p><p>\r\n\tThe challenge of rule design is knowing your user group well enough to hide or eliminate certain options in a way that feels useful and non-restrictive. Hiding options and revealing them when the time is right, through progressive disclosure, is generally more effective than removing options and content (Check out Jacob Nielsen’s book,&nbsp;<a href=\"http://www.nngroup.com/books/mobile-usability/\">Mobile Usability</a>, p. 60 for more on progressive disclosure). This technique can be quite effective if proper trigger affordances are built in to the design so users know how to find hidden content.</p><p>\r\n\tAlthough simplification through elimination of options does wonders for speed of use, there is a point at which further simplification would negatively impact usability. &nbsp;At this point, the challenge becomes knowing how to work with the necessary complexities. &nbsp;Larry Tesler, inventor of the cut-and-paste interaction, constructed a law to address the limitations of simplification. According to Tesler’s Law, all activities have inherent complexity, so there is a point at which simplification is no longer an option (Saffer,&nbsp;<em>Microinteractions</em>, p. 67). Accepting such limitations can be challenging, but there is often still ample room for creativity within such constraints.</p><p>\r\n\tIf user research and testing has been conducted, there are probably many ways to further a design, even under tight constraints and with only basic knowledge of user requirements. As a simple example, let’s look at designing a time picker for an event planning company. With just a small amount of user information, like the fact that users will only create events on or thirty minutes past the hour, we can already begin making more effective decisions. Out of the box most time pickers provide a drop-down list of all hours, and a separate drop-down menu list of all minutes to choose from. If we provide two long lists fill with mostly useless options, the time selection interaction will surely come up short. With basic knowledge of event times, long hour and minutes lists can be combined into one simple list of times in 30-minute increments. A meeting will never be scheduled for&nbsp;10:03pm, so there is no need to include&nbsp;10:03 as a selection choice.</p><p>\r\n\tAfter user research, one way to potentially improve interactions is through error prevention. If users of an application easily make mistakes, the design has great potential for improvement through error prevention design. The goal with many designs is to make it impossible for users to do something wrong. However, it is possible to achieve zero or low usage error potential with varying degrees of success. There are different ways to reduce or eliminate usage error potential, but the best approaches take usage flow into consideration. If an application has hundreds of pop-ups, users may never be able to make a mistake, but it will probably feel like hundreds of mistakes have been made-especially if audio feedback accompanies those popups. It may work to eliminate popups, but it will most likely not work to eliminate confirmation questions. One way to mitigate the disruption that a pop-up can create, while maintaining sound error prevention through confirmation checks is with interactive tooltips. A tooltip is subtle enough, when tastefully designed, that it will not overtly interrupt the experience. Since users are focusing directly where the tooltip appears, discoverability is also very high. The combination of high discoverability and marginal disruption of the experience makes tooltips ideal for many error prevention designs. Let’s look at applying tooltip error prevention to a photo sharing application. If one decides to edit a photo album within such an application, making sure to confirm user intent to delete photos is important. Instead of using pop-ups to display confirmation messages, let’s use an interactive tooltip on the delete button.</p><p id=\"attachment_4436\" style=\"width: 310px\" class=\"wp-caption aligncenter\">\r\n\t<a href=\"http://sbblog.s3.amazonaws.com/wp-content/uploads/2013/11/tooltip_confirmation.png\"><img class=\" wp-image-4436 \" alt=\"Tooltip Example\" src=\"http://sbblog.s3.amazonaws.com/wp-content/uploads/2013/11/tooltip_confirmation.png\" width=\"300\" height=\"200\"></a></p><p class=\"wp-caption-text\">\r\n\tIn the example above, error confirmation messaging has been incorporated in an unobtrusive way. There is less time and effort required to confirm intent.</p><p>\r\n\tIn some cases, especially with touch screen devices, we could make creative use of gestures for error prevention. Instead of confirming intent with a pop-up, or tooltip, we could require users to make a long swipe gesture in a highlighted area. This swipe trigger could be used in place of a tap trigger, which is final once a user interacts with it. With a swipe, users can decide to stop even after they have started swiping. Also, requiring prolonged intentional focus on the trigger activation lowers the chances of doing something by accident. A great example of this is found in the iOS7 lock and power off screens. An&nbsp;<a href=\"http://www.fastcodesign.com/3017236/apples-ios-7-redefines-industrial-design-through-evil-skeuomorphism\">evolved form of skeuomorphism</a> is used effectively in iOS7 interaction design to make things more intuitive and faster to use. The power off screen has a ‘slide to power off’ area at the top and a cancel button all the way at the bottom as far away from the top as possible. A swipe is required to trigger a device shutdown, while simply canceling out of the shutdown screen only requires a tap. In order to even reach the shutdown screen a user must first press and hold the power button. Additionally, through the physical mechanics of the button, users receive both haptic and audio feedback as it is pressed. The subtleties of such interactions, allows for a seamless and fast experience.</p><p>\r\n\tAfter looking at the examples above, we can begin to see there is great potential to improve usage speed through simplification of interactions, user research, and more.&nbsp;Comment below if you have any suggestions or remarks about how usage speed can be improved!</p><p><em>Smashing Boxes is a web and mobile app development company know for creating a lasting experience through bold design and disrupting the status quo. We are entrepreneurs and craftsmen first, and a digital creative agency second. Inspired by our visionary clients, we transform ideas into innovative web and mobile applications. </em><a href=\"http://smashingboxes.com/work\">Take a look at our work.</a></p><p><em>Cover photo by&nbsp;</em><a href=\"http://www.unmorceau.com/\" style=\"background-color: initial;\"><em>Sonja Langford</em></a></p>",
  "slug": "usage-speed-factors-in-interaction-design",
  "slug_history": "---\n- usage-speed-factors-in-interaction-design-2\n",
  "visits": 1329,
  "published": "2013-11-26T05:00:00+00:00",
  "authorName": "Lucas Brauer",
  "category_id": 3,
  "image_uid": "2014/07/29/12/10/46/789/file",
  "created_at": "2014-06-05T18:21:44+00:00",
  "updated_at": "2014-08-11T15:12:42+00:00",
  "markdown": null,
  "image_alt_text": null,
  "featured": false,
  "database_id": 243,
  "category": {
    "type": "Entry",
    "id": "category_3"
  },
  "authors": [
    {
      "type": "employee",
      "id": "employee_16"
    },
    {
      "type": "employee",
      "id": "employee_16"
    }
  ]
}