{
  "id": "post_322",
  "title": "Setting up Chef",
  "summary": "Chef is like Rails for systems integration. It’s a framework designed to create infrastructure as code. There are three parts to chef: server, client, and the command line tools. For the server we are going to use Hosted Chef which is free for up to 5 nodes. First let’s get the client set up. Client…",
  "body": "<p>\r\n\tChef is like Rails for systems integration. It’s a framework designed to create infrastructure as code.</p><p>\r\n\tThere are three parts to chef: server, client, and the command line tools. For the server we are going to use Hosted Chef which is free for up to 5 nodes.</p><p>\r\n\tFirst let’s get the client set up.</p><h3>Client Setup</h3><p>\r\n\tInstall the chef gem:</p><p class=\"tools\"></p><p class=\"wrap\"></p><p class=\"clear\">\r\n\t</p><p class=\"clear\">\r\n\t</p>\r\n\t<pre class=\"raw\">gem install chef</pre><p>\r\n\tNow create a \r\n\t<code>.chef/knife.rb</code> file in your project’s root directory:</p><p>\r\n\tNotice the environment variables being called there? Yes, we need to set them up.</p><h3>Setting Up Our Environment</h3><p>\r\n\t<a href=\"http://help.opscode.com/kb/start/2-setting-up-your-user-environment\">This is a pretty good guide</a> on signing up with Opscode for Hosted Chef and downloading the required <code>.pem</code> files.</p><p>\r\n\tSo now that you’ve set up your user and organization on Hosted Chef, you need to add them to your environment. \r\n\t<code>.bashrc</code> should be a good place to put this.</p><p>\r\n\tLet’s check that everything’s good:</p><p class=\"tools\"></p><p class=\"wrap\"></p><p class=\"clear\">\r\n\t</p><p class=\"clear\">\r\n\t</p>\r\n\t<pre class=\"raw\">knife node list</pre><p class=\"success\">\r\n\tThat should show you a list of your organization’s nodes.</p><h3>Import Cookbooks</h3><p>\r\n\tCookbooks are collections of recipes. Importing them from \r\n\t<a href=\"http://community.opscode.com/cookbooks\">Opscode’s community cookbooks repository</a> is as easy as:</p><p class=\"tools\"></p><p class=\"wrap\"></p><p class=\"clear\">\r\n\t</p><p class=\"clear\">\r\n\t</p>\r\n\t<pre class=\"raw\">knife cookbook site vendor [cookbook-name]</pre><p class=\"highlighted\">\r\n\t</p><p class=\"warning\">\r\n\tThis command will pull down a git repository containing the cookbook and then merge it with \r\n\t<code>master</code>Be careful if you were working in another branch!</p><p><strong>\r\n\tImportant</strong> Make the \r\n\t<code>cookbooks</code> directory in the root of your app and commit before pulling down any cookbooks. Be sure to do <code>touch cookbooks/.gitkeep</code> before committing to make sure git keeps that directory.</p><p>\r\n\tAssuming we are going to set up a Rails server with Unicorn and a HAProxy load balancer, let’s start with the following cookbooks:</p><p class=\"tools\"></p><p class=\"wrap\"></p><p class=\"clear\">\r\n\t</p><p class=\"clear\">\r\n\t</p>\r\n\t<pre class=\"raw\">knife cookbook site vendor application knife cookbook site vendor apt knife cookbook site vendor git knife cookbook site vendor haproxy knife cookbook site vendor mongodb knife cookbook site vendor users</pre><p class=\"highlighted\">\r\n\t</p><p>\r\n\tNow you need to upload the cookbook to your chef server:</p><p class=\"tools\"></p><p class=\"wrap\"></p><p class=\"clear\">\r\n\t</p><p class=\"clear\">\r\n\t</p>\r\n\t<pre class=\"raw\">knife cookbook upload -a</pre><p class=\"highlighted\">\r\n\t</p><p>\r\n\tNow I had some trouble with the mongodb cookbook. There was a syntax error so I forked it and submitted a pull request. The cookbook author accepted the request but the community cookbooks repo was not updated. So I used the \r\n\t<a href=\"https://github.com/websterclay/knife-github-cookbooks\">knife-github-cookbooks gem</a> to install the latest cookbook from github:</p><p class=\"tools\"></p><p class=\"wrap\"></p><p class=\"clear\">\r\n\t</p><p class=\"clear\">\r\n\t</p>\r\n\t<pre class=\"raw\">knife cookbook github install edelight/cookbooks</pre><h3>Add Roles</h3><p>\r\n\tA little terminology:</p><p>\r\n\t<strong>Node:</strong> One server instance</p><p>\r\n\t<strong>Environment:</strong> Chef determines which recipes to run based on which role and environment you’ve chosen. So a role ‘webserver’ can have different recipes for a ‘production’ environment and a ‘staging’ environmentRoleTags representing related functionality</p><p>\r\n\tSo to create a role we create a \r\n\t<code>roles</code> directory at the root of our project. Then we can add files such as <code>roles/base.rb</code></p><p><strong>\r\n\tImportant</strong> See the following section on data bags to set up the users and change the \r\n\t<code>your_name</code> value accordingly.</p><p>\r\n\tWe need to add this to our chef server, just like we added the cookbooks above:</p><p class=\"tools\"></p><p class=\"wrap\"></p><p class=\"clear\">\r\n\t</p><p class=\"clear\">\r\n\t</p>\r\n\t<pre class=\"raw\">knife role from file roles/base.rb</pre><p class=\"highlighted\">\r\n\t</p><p>\r\n\tNotice Roles can also be created with the \r\n\t<code>knife</code> tool, as JSON objects, or through chef server’s management interface.</p><h3>Data Bags</h3><p>\r\n\tBefore we deploy, we need to have a look at our \r\n\t<code>users</code> cookbook. <a href=\"https://github.com/opscode/rails-quick-start/tree/master/cookbooks/users\">The documentation</a> states that you need to create a data bag for users:</p><p class=\"tools\"></p><p class=\"wrap\"></p><p class=\"clear\">\r\n\t</p><p class=\"clear\">\r\n\t</p>\r\n\t<pre class=\"raw\">knife data bag create users</pre><p class=\"highlighted\">\r\n\t</p><p>\r\n\tWe’ll need a directory to put the user file in (do this in the root of your Rails app):</p><p class=\"tools\"></p><p class=\"wrap\"></p><p class=\"clear\">\r\n\t</p><p class=\"clear\">\r\n\t</p>\r\n\t<pre class=\"raw\">mkdir -p data_bags/users\t</pre><p class=\"highlighted\">\r\n\t</p><p>\r\n\tNow we can create a user. Open \r\n\t<code>data_bags/users/your_name.json</code> and make it look like this:</p><p class=\"tools\"></p><p class=\"wrap\"></p><p class=\"clear\">\r\n\t</p><p class=\"clear\">\r\n\t</p>\r\n\t<pre class=\"raw\">{ \"groups\": \"sysadmin\", \"ssh_keys\": \"ssh-rsa AAAAB3Nz...\", \"id\": \"your_name\", \"shell\": \"/bin/bash\" }\r\n\t</pre><p class=\"highlighted\">\r\n\t</p><p><strong>\r\n\tImportant </strong>Be sure to change \r\n\t<code>your_name</code> to the user name you actually want to use and paste your user’s public SSH key into the ssh_keys value.</p><p>\r\n\tWe’ll need another data bag for our application, call it \r\n\t<code>data_bags/rails_demo.json</code></p><p>\r\n\tUpload this data bag with:</p><p class=\"tools\"></p><p class=\"wrap\"></p><p class=\"clear\">\r\n\t</p><p class=\"clear\">\r\n\t</p>\r\n\t<pre class=\"raw\">knife data bag from file apps data_bags/rails_demo.json</pre><p class=\"highlighted\">\r\n\t</p><h3>Setting up EC2</h3><p>\r\n\tSign into your Amazon AWS web console and create a security group, \r\n\t<code>single_instance_production</code>&nbsp;and open the following ports:</p><ul>\r\n\t<li>22 – ssh</li>\t<li>80 – haproxy load balancer</li>\t<li>22002 – haproxy administrative interface</li>\t<li>8080 – unicorn Rails application</li></ul><p>\r\n\tFirst install some dependencies:</p><p class=\"tools\"></p><p class=\"wrap\"></p><p class=\"clear\">\r\n\t</p><p class=\"clear\">\r\n\t</p>\r\n\t<pre class=\"raw\">gem install net-ssh net-ssh-multi fog highline --no-rdoc --no-ri</pre><p class=\"highlighted\">\r\n\t</p><p>\r\n\tNow install the \r\n\t<a href=\"https://github.com/opscode/knife-ec2\">knife-ec2 gem</a> in order to provision EC2 instances:</p><p class=\"tools\"></p><p class=\"wrap\"></p><p class=\"clear\">\r\n\t</p><p class=\"clear\">\r\n\t</p>\r\n\t<pre class=\"raw\">gem install knife-ec2</pre><p class=\"highlighted\">\r\n\t</p><h3>Bootstrapping Chef with Ruby 1.9.2</h3><p>\r\n\tTurns out that chef installs ruby 1.8.7 by default. To fix this we need to add a ‘bootstrap’ file that gets run when the server is provisioned.</p><p>\r\n\tCreate a file, \r\n\t<code>bootstrap/ubuntu10.04-ruby1.9.2.erb</code> with the following:</p><p>\r\n\tThis script will run as soon as the server is up and compile ruby from source.</p><p class=\"note\">\r\n\tWhy not use \r\n\t<code>rvm</code>? <a href=\"http://wiki.opscode.com/display/chef/Troubleshooting+and+Technical+FAQ#TroubleshootingandTechnicalFAQ-MayIuseRVMtoinstallRubyand%2ForRubyGemsthatthechefclientrunsunder%3F\">Opscode doesn’t recommend it.</a> Seems it causes PATH errors. It’s not too bad though, because normally one ruby and gemset is fine for deploying a single-app server. There are <a href=\"https://github.com/fnichol/chef-rvm\">solutions</a> if you really want to use <code>rvm</code></p><h3>Launch Instance</h3><p>\r\n\tFor this example we are going to have a node named \r\n\t<code>chef-tutorial</code></p><p>\r\n\tThis command should launch a server and configure it with Hosted Chef:</p><p class=\"tools\"></p><p class=\"wrap\"></p><p class=\"clear\">\r\n\t</p><p class=\"clear\">\r\n\t</p>\r\n\t<pre class=\"raw\">knife ec2 server create --node-name ctr --groups single_instance_production --image ami-7000f019 --flavor m1.small --distro ubuntu10.04-ruby1.9.2 --ssh-key ampms -i ~/.ec2/ampms -x ubuntu --run-list 'role[base],role[rails_demo]'</pre><p class=\"highlighted\">\r\n\t</p><p>\r\n\tYou should see a bunch of commands executing on the server and finally something like this:</p><p>\r\n\tYou should now be able to ssh in and see that everything is set up right:</p><p class=\"tools\"></p><p class=\"wrap\"></p><p class=\"clear\">\r\n\t</p><p class=\"clear\">\r\n\t</p>\r\n\t<pre class=\"raw\">ssh -i ~/.ec2/private_key ubuntu@ec2-50-19-193-102.compute-1.amazonaws.com</pre><p class=\"highlighted\">\r\n\t</p><h3>Troubleshooting</h3><p>\r\n\tFiles for this tutorial are \r\n\t<a href=\"https://github.com/reedlaw/chef-tutorial\">here</a>.</p><p><i style=\"background-color: initial;\">Enjoyed&nbsp;this article? Check out our technical job openings&nbsp;</i><a href=\"http://smashingboxes.com/jobs\" style=\"font-size: 14px; background-color: initial;\">here</a><i style=\"background-color: initial;\">.&nbsp;</i></p>",
  "slug": "setting-up-chef",
  "slug_history": "--- []\n",
  "visits": 1742,
  "published": "2012-03-02T15:00:00+00:00",
  "authorName": "Reed Law",
  "category_id": 1,
  "image_uid": "2014/07/21/12/45/45/824/file",
  "created_at": "2014-06-05T18:25:39+00:00",
  "updated_at": "2014-12-18T22:59:58+00:00",
  "markdown": "",
  "image_alt_text": null,
  "featured": false,
  "database_id": 322,
  "category": {
    "type": "Entry",
    "id": "category_1"
  },
  "authors": [
    {
      "type": "employee",
      "id": "employee_18"
    },
    {
      "type": "employee",
      "id": "employee_18"
    }
  ]
}